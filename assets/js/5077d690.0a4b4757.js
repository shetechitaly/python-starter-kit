"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[845],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>f});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=r,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return t?n.createElement(f,o(o({ref:a},d),{},{components:t})):n.createElement(f,o({ref:a},d))}));function f(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6559:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const i={sidebar_position:1},o="DataFrame e Series",l={unversionedId:"pandas/dataframe-e-series",id:"pandas/dataframe-e-series",title:"DataFrame e Series",description:"Argomenti: DataFrame, Series",source:"@site/docs/pandas/dataframe-e-series.mdx",sourceDirName:"pandas",slug:"/pandas/dataframe-e-series",permalink:"/python-starter-kit/docs/pandas/dataframe-e-series",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Pandas",permalink:"/python-starter-kit/docs/category/pandas"},next:{title:"Lettura dei dati da CSV",permalink:"/python-starter-kit/docs/pandas/lettura-dati-csv"}},s={},p=[{value:"Intro",id:"intro",level:2},{value:"Series",id:"series",level:2},{value:"DataFrame",id:"dataframe",level:2},{value:"Differenza tra Series e DataFrame",id:"differenza-tra-series-e-dataframe",level:2},{value:"Esercizi",id:"esercizi",level:2},{value:"Esercizio 1",id:"esercizio-1",level:3},{value:"Esercizio 2",id:"esercizio-2",level:3}],d={toc:p},c="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dataframe-e-series"},"DataFrame e Series"),(0,r.kt)("p",null,"Argomenti: DataFrame, Series"),(0,r.kt)("h2",{id:"intro"},"Intro"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://pandas.pydata.org/"},"Pandas")," \xe8 una delle librerie pi\xf9 popolari in Python per l'analisi dei dati. Questa libreria fornisce strutture dati e metodi di analisi efficienti per manipolare tabelle numeriche e serie temporali. I principali componenti di Pandas sono ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"Series"),"."),(0,r.kt)("h2",{id:"series"},"Series"),(0,r.kt)("p",null,"Una ",(0,r.kt)("inlineCode",{parentName:"p"},"Series")," \xe8 una struttura dati unidimensionale simile a un array, una lista o una colonna in una tabella. Ha una etichetta per ciascuna entrata, che \xe8 come un indice per gli array in Python."),(0,r.kt)("p",null,"Ecco come creare una ",(0,r.kt)("inlineCode",{parentName:"p"},"Series"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\n\ns = pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])\nprint(s)\n")),(0,r.kt)("p",null,"Nell'esempio, abbiamo una ",(0,r.kt)("inlineCode",{parentName:"p"},"Series")," con valori dall'1 al 4 e un indice esplicitamente definito."),(0,r.kt)("h2",{id:"dataframe"},"DataFrame"),(0,r.kt)("p",null,"Un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," \xe8 una struttura dati bidimensionale che pu\xf2 essere immaginata come una tabella in un database, un foglio di calcolo o una tabelle SQL. Ha sia righe che colonne, ed ogni colonna in un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," pu\xf2 avere un tipo diverso, come numeri, stringhe, e cos\xec via."),(0,r.kt)("p",null,"Ecco come creare un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"data = {\n    'Nome': ['Anna', 'Marco', 'Luca'],\n    'Et\xe0': [25, 30, 22],\n    'Citt\xe0': ['Roma', 'Milano', 'Torino']\n}\n\ndf = pd.DataFrame(data)\nprint(df)\n")),(0,r.kt)("p",null,"Nell'esempio, abbiamo creato un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," con tre colonne: ",(0,r.kt)("inlineCode",{parentName:"p"},"Nome"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Et\xe0")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"Citt\xe0"),". Ogni colonna ha una serie di valori associati."),(0,r.kt)("h2",{id:"differenza-tra-series-e-dataframe"},"Differenza tra Series e DataFrame"),(0,r.kt)("p",null,"Mentre una ",(0,r.kt)("inlineCode",{parentName:"p"},"Series")," \xe8 una struttura dati unidimensionale che pu\xf2 avere qualsiasi tipo di dati, un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," \xe8 bidimensionale. Puoi immaginare un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," come una collezione di ",(0,r.kt)("inlineCode",{parentName:"p"},"Series")," con lo stesso indice."),(0,r.kt)("h2",{id:"esercizi"},"Esercizi"),(0,r.kt)("h3",{id:"esercizio-1"},"Esercizio 1"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Crea una ",(0,r.kt)("inlineCode",{parentName:"li"},"Series")," con i numeri dal 1 al 10 e utilizza come indice le lettere dell'alfabeto dalle lettera 'a' alla 'j'.")),(0,r.kt)("h3",{id:"esercizio-2"},"Esercizio 2"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Crea un ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," con i seguenti dati:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Nomi: Alessia, Tommaso, Marta"),(0,r.kt)("li",{parentName:"ul"},"Et\xe0: 20, 23, 27"),(0,r.kt)("li",{parentName:"ul"},"Professione: Studente, Ingegnere, Medico"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Dopo aver creato il ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame"),', stampa solo la colonna "Nome" e poi solo la riga corrispondente a "Marta".'))),(0,r.kt)("p",null,"Congratulazioni! \ud83c\udf89"),(0,r.kt)("p",null,"Ora hai una buona comprensione delle strutture dati fondamentali in Pandas."))}u.isMDXComponent=!0}}]);